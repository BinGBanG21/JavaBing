/*数据类型
	每一种数据都定义了明确的数据类型，在内存中分配了不同大小的内存空间（字节）
	1.基本数据类型 
		数值型
			整数类型：[byte(1) , short(2) , int(4) , long(8) ]
			浮点数类型： [float(4) ,double(8)]
		字符型
			char[2] 存放单字符 "a" "王"
		布尔型
			boolean[1] 存放true false
		注意：String是类 不是数据类型
	2.引用数据类型
		类
		接口
		数组
	

	整数类型
	Java 的整数类型就是用于存放整数值的，比如 12 , 30, 3456 等等
	byte n1 = 10; short n2 = 10;
	int n3 = 10;//4 个字节 long n4 = 10; //8 个字节

	类 型   				占用存储空间   			范围
	byte【字节】 			1字节         			 -128～127
	short【短整型】  		2字节					-32768~32767
	int 【整型】			4字节					-2147483648-2147483647
	long【长整型】			8字节					-2的63方～263-1
	
		
	1. Java各整数类型有固定的范围和字段长度，不受具体OS【操作系统】的影响，以保证java程序的可移植性。
	2. Java的整型常量（具体值）默认为int 型， 声明long型常量须后加 "T 或 'L 
	3.java程序中变量常声明为int型，除非不足以表示大数，才使用long 
	4. bit∶计算机中的最小存储单位。byte∶计算机中基本存储单元，1byte=8bit。

	byte n1 = 3    在内存中存在的形式  00000011 
	short n2 = 3   在内存中存在的形式	  0000000000000011

	浮点类型 
	Java 的浮点类型可以表示一个小数，比如 123.4 ，7.8 ，0.12 等等
	
	类 型   				占用存储空间   			范围
	单精度float 			4字节        			-3.403E38～3.403E38
	双精度double 		8字节					-1.798E308～1.798E308

	(1)关于浮点数在机器中存放形式的简单说明，浮点数=符号位+指数位+尾数位
	(2)尾数部分可能丢失，造成精度损失（小数都是近似值）

	1. 与整数类型类似，Java浮点类型也有固定的范围和字段长度，不受具体OS的
	影响。【float 4个字节 double是8个字节】
	2.Java的浮点型常量（具体值）默认为double型，声明float型常量，须后加'f'或'F'
	3.浮点型常量有两种表示形式
	十进制数形式∶如∶5.12   512.0f   .512 （必须有小数点）
	科学计数法形式∶如∶5.12e2【5.12*10的2次方】5.12E-2 【5.12/10的2次方】
	4. 通常情况下， 应该使用double型， 因为它比float型更精确
	5.浮点数使用陷阱2.7和8.1/3比较
	if(Math.abs(num7-num8)<0.00001)[
	System.out.println（"相等~~")


*/
public class DataType {
	public static void main (String[] args){
		int a = 1
		int b = 1L //报错  long类型不能赋值给int类型 （不兼容的类型）
		long c = 1L 
	}
}