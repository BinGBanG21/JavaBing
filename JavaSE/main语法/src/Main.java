/*
* 深入理解 main 方法
*   main方法的形式∶public static void main（String【】args）
*   1.main方法是虚拟机调用
    2.java虚拟机需要调用类的main（）方法，所以该方法的访问权限必须是public
    3. java虚拟机在执行main（）方法时不必创建对象，所以该方法必须是static
    4. 该方法接收String类型的数组参数，该数组中保存执行java命令时传递给所运行的类的参数
    5.java执行的程序参数1参数2参数3
  main方法注意
    1) 在 main()方法中，我们可以直接调用 main 方法所在类的静态方法或静态属性。
    2) 但是不能直接访问该类中的非静态成员，必须创建该类的一个实例对象后，才能通过这个对象去访问类中的非静态成员
  代码块
    基本介绍
       代码化块又称为初始化块，属于类中的成员【即是类的一部分】，类似于方法，将逻辑语句封装在方法体中，通过{}包围起来。
       但和方法不同，没有方法名，没有返回，没有参数，只有方法体，而且不用通过对象或类显式调用，而是加载类时，或创建对象时隐式调用。
    基本语法
        【修饰符】{
           代码
         }
    说明注意
        1）修饰符可选，要写的话，也只能写static
        2）代码块分为两类，使用static 修饰的叫静态代码块，没有static修饰的，叫普通代码块/非静态代码块。
        3）逻辑语句可以为任何逻辑语句（输入、输出、方法调用、循环、判断等）
        4）；号可以写上，也可以省略。
    代码块的好处
        1）相当于另外一种形式的构造器（对构造器的补充机制），可以做初始化的操作
        2）场景∶如果多个构造器中都有重复的语句，可以抽取到初始化块中，提高代码的重用性
        举例
          (1) 下面的三个构造器都有相同的语句
          (2) 这样代码看起来比较冗余
          (3) 这时我们可以把相同的语句，放入到一个代码块中，即可
          (4) 这样当我们不管调用哪个构造器，创建对象，都会先调用代码块的内容
          (5) 代码块调用的顺序优先于构造器
    代码块使用注意事项
        1）static代码块也叫静态代码块，作用就是对类进行初始化，而且它随着类的加载而执行，并且只会执行一次。
            如果是普通代码块，每创建一个对象，就执行。
        2）类什么时候被加载
            ①创建对象实例时（new）
            ②创建子类对象实例，父类也会被加载③使用类的静态成员时（静态属性，静态方法）例如：A类extendsB类的静态块
        3）普通的代码块，在创建对象实例时，会被隐式的调用。
            被创建一次，就会调用一次。
            如果只是使用类的静态成员时，普通代码块并不会执行。
        小结：
            1.static代码块是类加载时，执行，只会执行一次
            2.普通代码块是在创建对象时调用的，创建一次，调用一次
            3.类加载的3种情况，需要记住.
* */

public class Main {
    public static void main(String[] args) {

    }
}
