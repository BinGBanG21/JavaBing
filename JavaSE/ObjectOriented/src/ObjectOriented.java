/*
类变量和类方法
    假设有一群小孩在玩堆雪人,不时有新的小孩加入,请问如何知道现在共有多少人在玩?，编写程序解决。
    我们的思路是 在main方法里面设置一个变量count 然后让count++
    但是现在有一个问题  就是这个count变量是main方法独有的 其他对象不方便访问
    这里引出类变量
        如果,设计一个 int count 表示总人数,我们在创建一个小孩时，就把 count 加 1,并且 count 是所有对象共享的就 ok 了!
        解决方法：
            定义一个变量 count ,是一个类变量(静态变量) static 静态
            该变量最大的特点就是会被 Child 类的所有的对象实例共享
    有一个问题：静态变量放在哪里？
        有些书说在方法区…，jdk版本有关系，记住一点∶static变量是对象共享
        不管static 变量在哪里，共识：
            （1）static 变量是同一个类所有对象共享
            （2）static类变量，在类加载的时候就生成了。
     什么是类变量
        类变量也叫静态变量/静态属性，是该类的所有对象共享的变量
        任何一个该类的对象去访问它时，取到的都是相同的值
        任何一个该类的对象去修改它时，修改的也是同一个变量。
     定义语法
        访问修饰符  static  数据类型  变量名 （常用）
        static  访问修饰符  数据类型  变量名；
     访问类变量
        类名.类变量名
        对象名.类变量名
       【静态变量的访问修饰符的访问权限和范围和普通属性是一样的。】推荐使用∶类名.类变量名
     注意：类变量并不需要创建实例才可以访问 在类加载的时候就可以访问
     使用细节,或者说什么时候用到类变量：
        1.什么时候需要用类变量
            当我们需要让某个类的所有对象都共享一个变量时，就可以考虑使用类变量（静态变量）
            比如∶定义学生类，统计所有学生共交多少钱。Student（name，static fee)
        2.类变量与实例变量（普通属性）区别
            类变量是该类的所有对象共享的，而实例变量是每个对象独享的。
        3.加上static称为类变量或静态变量，否则称为实例变量/普通变量/非静态变量
        4.类变量可以通过类名，类变量名或者对象名，类变量名来访问
          但java设计者推荐我们使用类名.类变量名方式访问。
         【前提是满足访问修饰符的访问权限和范围】
        5.实例变量不能通过类名.类变量名方式访问。
        6.类变量是在类加载时就初始化了，也就是说，即使你没有创建对象，只要类加载了，就可以使用类变量了
        7.类变量的生命周期是随类的加载开始，随着类消亡而销毁。
    类方法的使用场景
        当方法中不涉及到任何和对象相关的成员，则可以将方法设计成静态方法，提高开发效率。比如工具类中的方法utils
        Math类、Arrays类、Collections 集合类
        在实际开发中，可以将一些通用的方法，设计成静态方法，这样我们不需要创建对象就可以使用了
        比如打印一维数组，冒泡排序，完成某个计算任务等
    类方法使用注意事项和细节
        1）类方法和普通方法都是随着类的加载而加载，将结构信息存储在方法区∶
           类方法中无this的参数  通方法中隐含着this的参数
        2）类方法可以通过类名调用，也可以通过对象名调用。
        3）普通方法和对象有关，需要通过对象名调用，比如对象名方法名（参数），不能通过类名调用。
        4）类方法中不允许使用和对象有关的关键字，比如this和super。普通方法（成员方法）可以。
        5）类方法（静态方法）中只能访问静态变量或静态方法。
        6）普通成员方法， 既可以访问 非静态成员， 也可以访问静态成员。
     小结 ：静态方法，只能访问静态的成员，非静态的方法，可以访问静态成员和非静态成员（必须遵守访问权限）





* */

public class ObjectOriented {
    public static void main(String[] args) {

    }
}
