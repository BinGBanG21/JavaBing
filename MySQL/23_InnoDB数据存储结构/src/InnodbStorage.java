public class InnodbStorage {
    public static void main(String[] args) {

    }
    /*
    1.页的内部结构
        页如果按类型划分的话，常见的有 `数据页（保存B+树节点）、系统表、Undo 页 和 事务数据页` 等。数据页是我们最常使用的页。
        数据页的 `16KB` 大小的存储空间被划分为七个部分，分别是文件头（File Header）、页头（Page Header）
        最大最小记录（Infimum + supremum）、用户记录（User Records）、空闲空间（Free Space）
        页目录（Page Directory）和文件尾（File Tailer）。
    2.区的分类
        区大体上可以分为4种类型：
            * 空闲的区 (FREE) : 现在还没有用到这个区中的任何页面。
            * 有剩余空间的碎片区 (FREE_FRAG)：表示碎片区中还有可用的页面。
            * 没有剩余空间的碎片区 (FULL_FRAG)：表示碎片区中的所有页面都被使用，没有空闲页面。
            * 附属于某个段的区 (FSEG)：每一个索引都可以分为叶子节点段和非叶子节点段。
        处于FREE、FREE_FRAG 以及 FULL_FRAG 这三种状态的区都是独立的，直属于表空间。而处于 FSEG 状态的区是附属于某个段的。
    3.独立表空间
        独立表空间，即每张表有一个独立的表空间，也就是数据和索引信息都会保存在自己的表空间中。
        独立的表空间 (即：单表) 可以在不同的数据库之间进行 `迁移`。
        空间可以回收 (DROP TABLE 操作可自动回收表空间；其他情况，表空间不能自己回收) 。
        如果对于统计分析或是日志表，删除大量数据后可以通过：alter table TableName engine=innodb; 回收不用的空间。对于使用独立表空间的表，不管怎么删除，表空间的碎片不会太严重的影响性能，而且还有机会处理。
        独立表空间结构
            独立表空间由段、区、页组成。
        真实表空间对应的文件大小
            我们到数据目录里看，会发现一个新建的表对应的 .ibd 文件只占用了 96K，才6个页面大小 (MySQL5.7中)，
            这是因为一开始表空间占用的空间很小，因为表里边都没有数据。不过别忘了这些 .ibd 文件是自扩展的，随着表中数据的增多，
            表空间对应的文件也逐渐增大。











     */
}
