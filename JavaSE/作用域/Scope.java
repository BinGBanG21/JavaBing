/*
	作用域
		1.在java编程中，主要的变量就是属性（成员变量）和局部变量
		2.我们说的局部变量一般是指在成员方法中定义的变量
		3. java中作用域的分类
			全局变量∶也就是属性，作用域为整个类体
			局部变量∶也就是除了属性之外的其他变量，作用域为定义它的代码块中
		4.全局变量（属性）可以不赋值，直接使用，因为有默认值，局部变量必须赋值后才能使用，因为没有默认值。
	注意事项和细节使用
		1.属性和局部变量可以重名，访问时遵循就近原则
		2.在同一个作用域中，比如在同一个成员方法中，两个局部变量，不能重名
		3.属性生命周期较长，伴随着对象的创建而创建，伴随着对象的销毁而销毁。
			局部变量，生命周期较短，伴随着它的代码块的执行而创建，伴随着代码块的结束而销毁.即在一次方法调用过程中
		4.作用域范围不同
			全局变量/属性可以被本类使用，或其他类使用（通过对象调用）
			局部变量∶只能在本类中对应的方法中使用
		5. 修饰符不同
			全局变量/属性可以加修饰符
			局部变量不可以加修饰符
	构造方法/构造器
		基本语法
			[修饰符] 方法名(形参列表){
			方法体;
			}
				1. 构造器没有返回值, 也不能写 void
				2. 构造器的名称和类 Person 一样
				3. (String pName, int pAge) 是构造器形参列表，规则和成员方法一样

		注意：
			1) 构造器的修饰符可以默认， 也可以是 public protected private
			2) 构造器没有返回值
			3) 方法名 和类名字必须一样
			4) 参数列表 和 成员方法一样的规则
			5) 构造器的调用, 由系统完成
		构造方法又叫构造器(constructor)，是类的一种特殊的方法，它的主要作用是完成对新对象的初始化。它有几个特点：
			1) 方法名和类名相同
			2) 没有返回值
			3) 在创建对象时，系统会自动的调用该类的构造器完成对象的初始化。
		注意事项和使用细节
			1.一个类可以定义多个不同的构造器，即构造器重载
			2.构造器名和类名要相同
			3.构造器没有返回值
			4.构造器是完成对象的初始化，并不是创建对象
			5.在创建对象时，系统自动的调用该类的构造方法
			6.如果程序员没有定义构造器，系统会自动给类生成一个默认无参构造器（也叫默认构造器)
			7.一旦定义了自己的构造器，默认的构造器就覆盖了，就不能再使用默认的无参构造器，除非显式的定义一下
*/