public class StorageEngine {
    public static void main(String[] args) {

    }
    /*
     主要的存储引擎介绍
        InnoDB 引擎：具备外键支持功能的事务存储引擎
            * MySQL从3.23.34a开始就包含InnoDB存储引擎。 `大于等于5.5之后，默认采用InnoDB引擎` 。
            * InnoDB是MySQL的 默认事务型引擎 ，它被设计用来处理大量的短期(short-lived)事务。可以确保事务的完整提交(Commit)和回滚(Rollback)。
            * 除了增加和查询外，还需要更新、删除操作，那么，应优先选择InnoDB存储引擎。 除非有非常特别的原因需要使用其他的存储引擎，否则应该优先考虑InnoDB引擎。
            * 数据文件结构：（在《第02章_MySQL数据目录》章节已讲）
              * 表名.frm 存储表结构（MySQL8.0时，合并在表名.ibd中）
              * 表名.ibd 存储数据和索引
            * InnoDB是 为处理巨大数据量的最大性能设计 。
              * 在以前的版本中，字典数据以元数据文件、非事务表等来存储。现在这些元数据文件被删除 了。比如： .frm ， .par ， .trn ， .isl ， .db.opt 等都在MySQL8.0中不存在了。
            * 对比MyISAM的存储引擎， InnoDB写的处理效率差一些 ，并且会占用更多的磁盘空间以保存数据和索引。
            * MyISAM只缓存索引，不缓存真实数据；InnoDB不仅缓存索引还要缓存真实数据， 对内存要求较 高 ，而且内存大小对性能有决定性的影响。
        MyISAM 引擎：主要的非事务处理存储引擎
            * MyISAM提供了大量的特性，包括全文索引、压缩、空间函数(GIS)等，但MyISAM不支持事务、行级 锁、外键 ，有一个毫无疑问的缺陷就是崩溃后无法安全恢复 。
            * 5.5之前默认的存储引擎
            * 优势是访问的速度快 ，对事务完整性没有要求或者以SELECT、INSERT为主的应用
            * 针对数据统计有额外的常数存储。故而 count(*) 的查询效率很高 数据文件结构：（在《第02章_MySQL数据目录》章节已讲）
              * 表名.frm 存储表结构
              * 表名.MYD 存储数据 (MYData)
              * 表名.MYI 存储索引 (MYIndex)
            * 应用场景：只读应用或者以读为主的业务
        Archive 引擎：用于数据存档
        Blackhole 引擎：丢弃写操作，读操作会返回空内容
        CSV 引擎：存储数据时，以逗号分隔各个数据项
        Memory 引擎：置于内存的表
            Memory采用的逻辑介质是内存 ，响应速度很快 ，但是当mysqld守护进程崩溃的时候数据会丢失 。另外，要求存储的数据是数据长度不变的格式，比如，Blob和Text类型的数据不可用(长度不固定的)。
            主要特征：
                * Memory同时 支持哈希（HASH）索引 和 B+树索引 。
                * Memory表至少比MyISAM表要快一个数量级 。
                * MEMORY 表的大小是受到限制 的。表的大小主要取决于两个参数，分别是 max_rows 和 max_heap_table_size 。其中，max_rows可以在创建表时指定；max_heap_table_size的大小默 认为16MB，可以按需要进行扩大。
                * 数据文件与索引文件分开存储。
                * 缺点：其数据易丢失，生命周期短。基于这个缺陷，选择MEMORY存储引擎时需要特别小心。
            使用Memory存储引擎的场景：
                1. 目标数据比较小 ，而且非常频繁的进行访问 ，在内存中存放数据，如果太大的数据会造成内存溢出.可以通过参数 max_heap_table_size 控制Memory表的大小，限制Memory表的最大的大小。
                2. 如果数据是临时的 ，而且必须立即可用得到，那么就可以放在内存中。
                3. 存储在Memory表中的数据如果突然间丢失的话也没有太大的关系 。
            Federated 引擎：访问远程表
            Federated引擎是访问其他MySQL服务器的一个代理 ，尽管该引擎看起来提供了一种很好的跨服务器的灵活性,但也经常带来问题，因此 默认是禁用的 。
            Merge引擎：管理多个MyISAM表构成的表集合
            NDB引擎：MySQL集群专用存储引擎,也叫做 NDB Cluster 存储引擎，主要用于 MySQL Cluster 分布式集群环境，类似于Oracle的RAC集群







     */
}
